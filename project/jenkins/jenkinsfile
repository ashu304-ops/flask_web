pipeline:
  agent:
    docker:
      image: python:3.9-slim
      args: -v $HOME/.cache:/root/.cache
  environment:
    DOCKERHUB_CREDENTIALS: credentials('dockerhub-credentials')
    DOCKER_IMAGE: yourusername/mechanical-chatbot-nlp:${BUILD_ID}
  stages:
    - stage: Checkout
      steps:
        - git:
            url: https://github.com/<your-username>/mechanical-chatbot.git
            branch: ${BRANCH_NAME}
        - sh: cd nlp_service
    - stage: Build
      steps:
        - sh: |
            pip install --no-cache-dir -r requirements.txt
            cp -r en_core_web_sm /usr/local/lib/python3.9/site-packages/
            python -c "import spacy; nlp = spacy.load('en_core_web_sm'); print('Model loaded successfully')"
    - stage: Test
      steps:
        - sh: python -m unittest discover tests
    - stage: Docker Build & Push
      when:
        branch: main
      steps:
        - script:
            sh: docker build -t ${DOCKER_IMAGE} -f Dockerfile .
            sh: echo $DOCKERHUB_CREDENTIALS_PSW | docker login -u $DOCKERHUB_CREDENTIALS_USR --password-stdin
            sh: docker push ${DOCKER_IMAGE}
            sh: docker tag ${DOCKER_IMAGE} yourusername/mechanical-chatbot-nlp:latest
            sh: docker push yourusername/mechanical-chatbot-nlp:latest
    - stage: Deploy to Kubernetes
      when:
        branch: main
      steps:
        - sh: kubectl apply -f ../kubernetes/nlp_service.yaml
        - sh: kubectl apply -f ../kubernetes/pvc.yaml
post:
  always:
    - sh: kubectl delete -f ../kubernetes/nlp_service.yaml || true